<?xml version="1.0"?>
<process-model model-name="cmac_source" code-language="C" tv-in-db="yes" tv-in-tb="yes">
	<OPNET-info OPNET-release="12.0.A" OPNET-patchlevel="5" OPNET-model-data-version="10.7.A"/>
	<simulation-attributes>
		<attribute name="interpacket_time" group="traffic" type="double">
			<properties type="double" auto-assign="no" symbolic-only="no">
				<default-value value="1.0"/>
			</properties>
		</attribute>
	</simulation-attributes>
	<attribute-assignments>
		<assignment attribute-name="begsim intrpt" type="toggle" status="hidden" value="1"/>
		<assignment attribute-name="doc file" type="string" status="hidden"/>
		<assignment attribute-name="endsim intrpt" type="toggle" status="hidden"/>
		<assignment attribute-name="failure intrpts" type="enumerated" status="hidden"/>
		<assignment attribute-name="intrpt interval" type="toggle double" status="hidden"/>
		<assignment attribute-name="priority" type="integer" status="hidden"/>
		<assignment attribute-name="recovery intrpts" type="enumerated" status="hidden"/>
		<assignment attribute-name="subqueue" type="compound" status="hidden">
			<sub-object>
				<attribute creation-mechanics="Model" name="count" type="integer" value="1"/>
				<attribute creation-mechanics="Model" name="list" type="object list">
					<object-list>
						<sub-object/>
					</object-list>
				</attribute>
			</sub-object>
		</assignment>
		<assignment attribute-name="super priority" type="toggle" status="hidden"/>
	</attribute-assignments>
	<state-variables>
<![CDATA[
/* Process ID display string */
char	\pid_string [64];

/* Determines whether the simulation is in debug mode */
Boolean	\debug_mode;

double	\inter_pk_time;

]]>
	</state-variables>
	<header-block>
<![CDATA[
/*
 *  cmac_source.c
 *  
 *  Created by Fabrice Theoleyre on 29/09/09.
 *  Copyright 2009 CNRS / LIG. All rights reserved.
 *
 */


/* Include files. */
#include 	<math.h>
#include 	"cmac_process.h"

//packet size in bytes
#define		PACKET_SIZE				128.0




]]>
	</header-block>
	<states initial-state-id="0">
		<state id="0" x="90" y="90">
			<attribute name="name" type="string" value="init"/>
			<attribute name="Enter Execs" type="textlist">
				<value-text>
<![CDATA[

/* Schedule the first OFF-period scheduling by setting	*/
/* a self-interrupt for the start time. If the start	*/
/* time is set to "Infinity", then there is no need to	*/
/* to schedule an interrupt as this node has been set	*/
/* will not generate any traffic.					*/
//The mac_interface or mac processes are badly conceived, they require a synchronization

op_ima_sim_attr_get (OPC_IMA_DOUBLE, "interpacket_time" , &inter_pk_time);
op_intrpt_schedule_self (op_sim_time () + op_dist_uniform(inter_pk_time) , 0);

]]>
				</value-text>
			</attribute>
		</state>
		<state id="2" x="330" y="90">
			<attribute name="name" type="string" value="on"/>
			<attribute name="Enter Execs" type="textlist">
				<value-text>
<![CDATA[
Packet*		pkptr;
double		next_packet_arrival_time;

//next packet
next_packet_arrival_time = op_sim_time() + op_dist_exponential(inter_pk_time);
op_intrpt_schedule_self (next_packet_arrival_time, 0);

//only if start is over-passed (One interarrival pk has surely changed)
if (op_sim_time() > TIME_START_DATA){

	//PK creation
	pkptr  = op_pk_create (PACKET_SIZE * 8);

	// Pk transmission
	op_pk_send (pkptr, 0);
}

]]>
				</value-text>
			</attribute>
			<attribute name="Exit Execs" type="textlist"/>
		</state>
	</states>
	<transitions>
		<transition source-state-id="2" destination-state-id="2" label-x="281" label-y="136">
			<path-point x="317" y="104"/>
			<path-point x="245" y="168"/>
			<path-point x="400" y="183"/>
			<path-point x="339" y="100"/>
			<attribute name="name" type="string" value="tr_8"/>
		</transition>
		<transition source-state-id="0" destination-state-id="2" label-x="206" label-y="78">
			<path-point x="99" y="82"/>
			<path-point x="313" y="74"/>
			<attribute name="name" type="string" value="tr_10"/>
		</transition>
	</transitions>
	<comments>
<![CDATA[
General Process Description                                         
--------------------------- 

The "bursty_source" process model emulates an ON-OFF (active-inactive) 
traffic generator model.  Packets are only generated while the process is 
in the ON state.  The duration for which the process stays in the ON or 
OFF state is configurable. 
]]>
	</comments>
</process-model>
